version: '3'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.3
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - --api.insecure=true 
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.web-secure.address=:443
      - --certificatesresolvers.le.acme.email=maciekpokorski@gmail.com
      - --certificatesresolvers.le.acme.storage=/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
      - "443:443" #Docker sends requests on port 443 to Traefik on port 443
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.http.middlewares.wwwtohttps.redirectregex.regex=.*www.*"
      - "traefik.http.middlewares.wwwtohttps.redirectregex.replacement=https://localhost"
      - "traefik.http.middlewares.wwwtohttps.redirectregex.permanent=true"

      - "traefik.http.middlewares.http-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.http-redirectscheme.redirectscheme.permanent=true"

  dummy-container:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dummy-container.rule=Host(`dummy-container.docker.localhost`)"
      - "traefik.http.routers.dummy-container.tls=true"
      - "traefik.http.routers.dummy-container.tls.certresolver=le"
      - "traefik.http.routers.dummy-container.middlewares=wwwtohttps"
        
      - "traefik.http.routers.dummy-container-http.entrypoints=web"
      - "traefik.http.routers.dummy-container-http.rule=Host(`dummy-container.docker.localhost`)"
      - "traefik.http.routers.dummy-container-http.middlewares=http-redirectscheme"

  nginx:
    #Frontend-app
    image: nginx:mainline-alpine
    container_name: nginx
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`nginx.docker.localhost`)"
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.routers.nginx.tls.certresolver=le"
      - "traefik.http.routers.nginx.middlewares=wwwtohttps"

      - "traefik.http.routers.nginx-http.entrypoints=web"
      - "traefik.http.routers.nginx-http.rule=Host(`nginx.docker.localhost`)"
      - "traefik.http.routers.nginx-http.middlewares=http-redirectscheme"
  
  redis:
    image: redis:alpine
  
  postgreSQL:
    image: postgres:9.6.19-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  rabbitMQ:
    image: rabbitmq:alpine
